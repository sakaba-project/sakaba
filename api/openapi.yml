openapi: 3.0.0
info:
  title: sakaba-api
  version: '1.0'
  description: 'This is OpenAPI Document for sakaba-api (https://github.com/sakaba-project/sakaba)'
  contact: {}
servers:
  - url: 'http://localhost:3000'
components:
  schemas:
    user:
      title: User
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        occupation:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    voice:
      title: voice
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        type:
          type: integer
          description: '0 -> 声を出してほしい人のvoice, 1 -> アウトプットする人のvoice'
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag'
    tag:
      title: tag
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        voices:
          type: array
          items:
            $ref: '#/components/schemas/voice'
    output:
      title: output
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        url:
          type: string
          format: uri
        tag_id:
          type: string
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
paths:
  /users:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
      operationId: get-users
      description: Get a list of users
    post:
      summary: ''
      tags: []
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                occupation:
                  type: string
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    delete:
      summary: ''
      tags: []
      operationId: delete-users-user_id
      responses:
        '200':
          description: OK
      description: Delete the user
    patch:
      summary: ''
      tags: []
      operationId: patch-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Update the user info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                occupation:
                  type: string
    get:
      summary: ''
      tags: []
      operationId: get-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Get the user
  /voices:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/voice'
      operationId: get-voices
      description: Get a list of voices
    post:
      summary: ''
      tags: []
      operationId: post-voices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voice'
      description: Create a new voice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                type:
                  type: string
                user_id:
                  type: string
  '/voices/{voice_id}':
    parameters:
      - schema:
          type: string
        name: voice_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voice'
      operationId: get-voices-voice_id
      description: Get the voice
    patch:
      summary: ''
      tags: []
      operationId: patch-voices-voice_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voice'
      description: Update the voice info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                type:
                  type: string
                user_id:
                  type: string
    delete:
      summary: ''
      tags: []
      operationId: delete-voices-voice_id
      responses:
        '200':
          description: OK
      description: Delete the voice
  /tags:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      operationId: get-tags
      description: Get a list of tags
    post:
      summary: ''
      tags: []
      operationId: post-tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
      description: Create a new tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
  '/tags/{tag_id}':
    parameters:
      - schema:
          type: string
        name: tag_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
      operationId: get-tags-tag_id
      description: Get the tag
    patch:
      summary: ''
      tags: []
      operationId: patch-tags-tag_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
      description: Update the tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
    delete:
      summary: ''
      tags: []
      operationId: delete-tags-tag_id
      responses:
        '200':
          description: OK
      description: Delete the tag
  /outputs:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/output'
      operationId: get-outputs
      description: Get outputs
    post:
      summary: ''
      tags: []
      operationId: post-outputs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output'
      description: Create a new output
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                url:
                  type: string
                tag_id:
                  type: string
                user_id:
                  type: string
  '/outputs/{output_id}':
    parameters:
      - schema:
          type: string
        name: output_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output'
      operationId: get-outputs-output_id
      description: Get the output
    patch:
      summary: ''
      tags: []
      operationId: patch-outputs-output_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/output'
      description: Update the output
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                url:
                  type: string
                tag_id:
                  type: string
                user_id:
                  type: string
    delete:
      summary: ''
      tags: []
      operationId: delete-outputs-output_id
      responses:
        '200':
          description: OK
      description: Delete the output
